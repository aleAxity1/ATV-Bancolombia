name: Angular CI

on:
  workflow_dispatch:
  push:
    branches: [feature/TITAN, develop, master]

jobs:
  start-runner:
    timeout-minutes: 5 # normally it only takes 1-2 minutes
    name: Start self-hosted EC2 runner
    runs-on: [aws-bridge]
    permissions:
      actions: write
      contents: read
      id-token: write
    steps:
      - name: Configure AWS credentials
        id: creds # name of step, to allow access to outputs
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: "us-east-1"
          role-to-assume: "arn:aws:iam::992382646884:role/GithubActionsRole"
          output-credentials: true
      - name: Start EC2 runner
        id: start-ec2-runner
        uses: Axitymx/ec2-action-builder@main
        with:
          github_token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          aws_access_key_id: ${{ steps.creds.outputs.aws-access-key-id }} # generated by configure-aws-credentials
          aws_secret_access_key: ${{ steps.creds.outputs.aws-secret-access-key }} # generated by configure-aws-credentials
          aws_session_token: ${{ steps.creds.outputs.aws-session-token }} # generated by configure-aws-credentials
          aws_region: "us-east-1"
          ec2_instance_type: "t2.medium"
          ec2_ami_id: "ami-0b1ec420da2666704"
          ec2_subnet_id: "subnet-0f81cad69d083ad36"
          ec2_security_group_id: "sg-0b5bc7835030aaf3e"
          ec2_instance_ttl: 60 # Optional (default is 60 minutes)
          ec2_spot_instance_strategy: BestEffort # Other options are: SpotOnly, BestEffort, MaxPerformance

  build:
    needs:
      - start-runner
    runs-on: ${{ github.run_id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.2
        with:
          # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
          node-version: ">=20.15.0"

      - name: Download dependencies with NPM
        run: npm ci
        working-directory: front

      - name: test CI with NPM
        run: npm run test-ci
        working-directory: front

      - uses: SonarSource/sonarqube-scan-action@v2.3.0
        env:
          SONAR_HOST_URL: https://sonar.axity.com
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: front
          args: >
            -Dsonar.projectKey=Axity_Angular_Archetype
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.sources=src/app
            -Dsonar.exclusions=**/node_modules/**,**/*.spec.ts,**/*.module.ts,**/app.child.imports.ts
            -Dsonar.tests=src
            -Dsonar.test.inclusions=**/*.spec.ts
            -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info
